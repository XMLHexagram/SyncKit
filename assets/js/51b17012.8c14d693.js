(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{132:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return m}));var a=r(0),n=r.n(a);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},c=Object.keys(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)r=c[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var b=n.a.createContext({}),p=function(e){var t=n.a.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=p(e.components);return n.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),d=p(r),u=a,m=d["".concat(o,".").concat(u)]||d[u]||s[u]||c;return r?n.a.createElement(m,l(l({ref:t},b),{},{components:r})):n.a.createElement(m,l({ref:t},b))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,o=new Array(c);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var b=2;b<c;b++)o[b]=r[b];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},93:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return p}));var a=r(3),n=r(7),c=(r(0),r(132)),o={},l={unversionedId:"CoreDataAPI/classes/CoreDataStack",id:"CoreDataAPI/classes/CoreDataStack",isDocsHomePage:!1,title:"CoreDataStack",description:"CLASS",source:"@site/docs/CoreDataAPI/classes/CoreDataStack.md",slug:"/CoreDataAPI/classes/CoreDataStack",permalink:"/SyncKit/CoreDataAPI/classes/CoreDataStack",version:"current",sidebar:"api",previous:{title:"CoreDataAdapter",permalink:"/SyncKit/CoreDataAPI/classes/CoreDataAdapter"},next:{title:"DefaultCoreDataAdapterProvider",permalink:"/SyncKit/CoreDataAPI/classes/DefaultCoreDataAdapterProvider"}},i=[{value:"Properties",id:"properties",children:[{value:"<code>managedObjectContext</code>",id:"managedobjectcontext",children:[]},{value:"<code>persistentStoreCoordinator</code>",id:"persistentstorecoordinator",children:[]},{value:"<code>store</code>",id:"store",children:[]},{value:"<code>storeType</code>",id:"storetype",children:[]},{value:"<code>storeURL</code>",id:"storeurl",children:[]},{value:"<code>useDispatchImmediately</code>",id:"usedispatchimmediately",children:[]},{value:"<code>model</code>",id:"model",children:[]},{value:"<code>concurrencyType</code>",id:"concurrencytype",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>init(storeType:model:storeURL:concurrencyType:dispatchImmediately:)</code>",id:"initstoretypemodelstoreurlconcurrencytypedispatchimmediately",children:[]},{value:"<code>deleteStore()</code>",id:"deletestore",children:[]}]}],b={toc:i};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"CLASS")),Object(c.b)("h1",{id:"coredatastack"},Object(c.b)("inlineCode",{parentName:"h1"},"CoreDataStack")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public class CoreDataStack: NSObject\n")),Object(c.b)("p",null,"Encapsulates a Core Data stack. This predates ",Object(c.b)("inlineCode",{parentName:"p"},"NSPersistentContainer")," and it's basically the same."),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("h3",{id:"managedobjectcontext"},Object(c.b)("inlineCode",{parentName:"h3"},"managedObjectContext")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public private(set) var managedObjectContext: NSManagedObjectContext!\n")),Object(c.b)("h3",{id:"persistentstorecoordinator"},Object(c.b)("inlineCode",{parentName:"h3"},"persistentStoreCoordinator")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public private(set) var persistentStoreCoordinator: NSPersistentStoreCoordinator!\n")),Object(c.b)("h3",{id:"store"},Object(c.b)("inlineCode",{parentName:"h3"},"store")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public private(set) var store: NSPersistentStore!\n")),Object(c.b)("h3",{id:"storetype"},Object(c.b)("inlineCode",{parentName:"h3"},"storeType")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let storeType: String\n")),Object(c.b)("h3",{id:"storeurl"},Object(c.b)("inlineCode",{parentName:"h3"},"storeURL")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let storeURL: URL?\n")),Object(c.b)("h3",{id:"usedispatchimmediately"},Object(c.b)("inlineCode",{parentName:"h3"},"useDispatchImmediately")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let useDispatchImmediately: Bool\n")),Object(c.b)("h3",{id:"model"},Object(c.b)("inlineCode",{parentName:"h3"},"model")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let model: NSManagedObjectModel\n")),Object(c.b)("h3",{id:"concurrencytype"},Object(c.b)("inlineCode",{parentName:"h3"},"concurrencyType")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let concurrencyType: NSManagedObjectContextConcurrencyType\n")),Object(c.b)("h2",{id:"methods"},"Methods"),Object(c.b)("h3",{id:"initstoretypemodelstoreurlconcurrencytypedispatchimmediately"},Object(c.b)("inlineCode",{parentName:"h3"},"init(storeType:model:storeURL:concurrencyType:dispatchImmediately:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public init(storeType: String,\n     model: NSManagedObjectModel,\n     storeURL: URL?,\n     concurrencyType: NSManagedObjectContextConcurrencyType = .privateQueueConcurrencyType,\n     dispatchImmediately: Bool = false)\n")),Object(c.b)("p",null,"Create a new Core Data stack."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Parameters:",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"storeType: Store type, such as NSSQLiteStoreType."),Object(c.b)("li",{parentName:"ul"},"model: model to be used for the stack."),Object(c.b)("li",{parentName:"ul"},"storeURL: ",Object(c.b)("inlineCode",{parentName:"li"},"URL")," for the store location. Optional."),Object(c.b)("li",{parentName:"ul"},"concurrencyType: Default is ",Object(c.b)("inlineCode",{parentName:"li"},"privateQueueConcurrencyType")),Object(c.b)("li",{parentName:"ul"},"dispatchImmediately: Used for testing.")))),Object(c.b)("h4",{id:"parameters"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"storeType"),Object(c.b)("td",{parentName:"tr",align:null},"Store type, such as NSSQLiteStoreType.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"model"),Object(c.b)("td",{parentName:"tr",align:null},"model to be used for the stack.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"storeURL"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"URL")," for the store location. Optional.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"concurrencyType"),Object(c.b)("td",{parentName:"tr",align:null},"Default is ",Object(c.b)("inlineCode",{parentName:"td"},"privateQueueConcurrencyType"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"dispatchImmediately"),Object(c.b)("td",{parentName:"tr",align:null},"Used for testing.")))),Object(c.b)("h3",{id:"deletestore"},Object(c.b)("inlineCode",{parentName:"h3"},"deleteStore()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public func deleteStore()\n")),Object(c.b)("p",null,"Winds down the stack and deletes the store."))}p.isMDXComponent=!0}}]);