(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{118:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(7),o=(t(0),t(132)),i={id:"coredata",title:"SyncKit for Core Data"},c={unversionedId:"coredata",id:"coredata",isDocsHomePage:!1,title:"SyncKit for Core Data",description:"Import SyncKit and create a synchronizer:",source:"@site/docs/coreData.md",slug:"/coredata",permalink:"/SyncKit/coredata",version:"current",sidebar:"docs",previous:{title:"Overview",permalink:"/SyncKit/overview"},next:{title:"Migrating from SyncKit 0.3.0",permalink:"/SyncKit/migration"}},s=[{value:"Identifying objects",id:"identifying-objects",children:[]},{value:"Previous versions",id:"previous-versions",children:[]},{value:"Limitations",id:"limitations",children:[]}],u={toc:s};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Import SyncKit and create a synchronizer:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},'\nimport SyncKit\n\n...\n\nsynchronizer = CloudKitSynchronizer.privateSynchronizer(containerName: "your-iCloud-container-name",\n                                                                     managedObjectContext: self.coreDataStack.managedObjectContext)\n\n...\n\n// Synchronize\nsynchronizer.synchronize { error in\n    ...\n}\n')),Object(o.b)("p",null,"This creates a ",Object(o.b)("inlineCode",{parentName:"p"},"CloudKitSynchronizer")," object configured with a ",Object(o.b)("inlineCode",{parentName:"p"},"CoreDataAdapter")," for your model. The adapter registers changes in your model objects so they can be uploaded next time you synchronize data, and it applies changes from downloaded records to your model."),Object(o.b)("p",null,"By default, the adapter will save changes to your Core Data context for you during synchronization, but custom logic can be provided by assigning a custom ",Object(o.b)("inlineCode",{parentName:"p"},"CoreDataAdapterDelegate"),"."),Object(o.b)("h2",{id:"identifying-objects"},"Identifying objects"),Object(o.b)("p",null,"In order for SyncKit to be able to map CloudKit records to your objects your Core Data classes should conform to ",Object(o.b)("inlineCode",{parentName:"p"},"PrimaryKey")," and implement its "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},"static func primaryKey() -> String\n")),Object(o.b)("p",null,"method to return the name of a stored property that should be used as primary key.\nPrimary keys should have a unique value for each object of the same class, and this value should not change in the lifetime of the object."),Object(o.b)("p",null,"For example, in the example project we have:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},'@objc(QSCompany)\npublic class QSCompany: NSManagedObject, PrimaryKey {\n    public static func primaryKey() -> String {\n        return "identifier"\n    }\n}\n\nextension QSCompany {\n\n    @nonobjc public class func fetchRequest() -> NSFetchRequest<QSCompany> {\n        return NSFetchRequest<QSCompany>(entityName: "QSCompany")\n    }\n\n    @NSManaged public var identifier: String?\n    @NSManaged public var name: String?\n    @NSManaged public var sortIndex: NSNumber?\n    @NSManaged public var employees: NSSet?\n\n}\n\n...\n\nfunc insertCompany(name: String) {\n  let company = NSEntityDescription.insertNewObject(forEntityName: "QSCompany", into: managedObjectContext) as! QSCompany\n  company.identifier = UUID().uuidString\n  company.name = name\n  try? managedObjectContext.save()\n}\n\n')),Object(o.b)("h2",{id:"previous-versions"},"Previous versions"),Object(o.b)("p",null,"If you were using SyncKit before version 0.3.0 and you would like to adopt primary keys, check the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/mentrena/SyncKit/wiki/Core-Data-migrations"},"migration guide"),"."),Object(o.b)("h2",{id:"limitations"},"Limitations"),Object(o.b)("p",null,"CloudKit doesn't support ordered relations or many-to-many relationships, so those won't work."))}l.isMDXComponent=!0},132:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),l=function(e){var n=a.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=l(e.components);return a.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return t?a.a.createElement(b,c(c({ref:n},u),{},{components:t})):a.a.createElement(b,c({ref:n},u))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=t[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);