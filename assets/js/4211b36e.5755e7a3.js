(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{130:function(e,t,r){"use strict";r.d(t,"a",(function(){return i})),r.d(t,"b",(function(){return m}));var o=r(0),a=r.n(o);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var b=a.a.createContext({}),d=function(e){var t=a.a.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},i=function(e){var t=d(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),i=d(r),u=o,m=i["".concat(c,".").concat(u)]||i[u]||s[u]||n;return r?a.a.createElement(m,l(l({ref:t},b),{},{components:r})):a.a.createElement(m,l({ref:t},b))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,c=new Array(n);c[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var b=2;b<n;b++)c[b]=r[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},90:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return d}));var o=r(3),a=r(7),n=(r(0),r(130)),c={},l={unversionedId:"CoreDataAPI/protocols/CoreDataAdapterRecordProcessing",id:"CoreDataAPI/protocols/CoreDataAdapterRecordProcessing",isDocsHomePage:!1,title:"CoreDataAdapterRecordProcessing",description:"PROTOCOL",source:"@site/docs/CoreDataAPI/protocols/CoreDataAdapterRecordProcessing.md",slug:"/CoreDataAPI/protocols/CoreDataAdapterRecordProcessing",permalink:"/SyncKit/CoreDataAPI/protocols/CoreDataAdapterRecordProcessing",version:"current",sidebar:"api",previous:{title:"CoreDataAdapterConflictResolutionDelegate",permalink:"/SyncKit/CoreDataAPI/protocols/CoreDataAdapterConflictResolutionDelegate"},next:{title:"CoreDataAdapterDelegate",permalink:"/SyncKit/CoreDataAPI/protocols/CoreDataAdapterDelegate"}},p=[{value:"Methods",id:"methods",children:[{value:"<code>shouldProcessPropertyBeforeUpload(propertyName:object:record:)</code>",id:"shouldprocesspropertybeforeuploadpropertynameobjectrecord",children:[]},{value:"<code>shouldProcessPropertyInDownload(propertyName:object:record:)</code>",id:"shouldprocesspropertyindownloadpropertynameobjectrecord",children:[]}]}],b={toc:p};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(n.b)("wrapper",Object(o.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,Object(n.b)("strong",{parentName:"p"},"PROTOCOL")),Object(n.b)("h1",{id:"coredataadapterrecordprocessing"},Object(n.b)("inlineCode",{parentName:"h1"},"CoreDataAdapterRecordProcessing")),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-swift"},"@objc public protocol CoreDataAdapterRecordProcessing: class\n")),Object(n.b)("p",null,"An implementation of this protocol can be provided for custom ",Object(n.b)("inlineCode",{parentName:"p"},"CKRecord")," generation."),Object(n.b)("h2",{id:"methods"},"Methods"),Object(n.b)("h3",{id:"shouldprocesspropertybeforeuploadpropertynameobjectrecord"},Object(n.b)("inlineCode",{parentName:"h3"},"shouldProcessPropertyBeforeUpload(propertyName:object:record:)")),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-swift"},"func shouldProcessPropertyBeforeUpload(propertyName: String, object: NSManagedObject, record: CKRecord) -> Bool\n")),Object(n.b)("p",null,"Called by the adapter before copying a property from the Core Data object to the CloudKit record to upload to CloudKit. The method can then apply custom logic to encode the property in the record."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Parameters:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"propertyName: The name of the property that is being processed"),Object(n.b)("li",{parentName:"ul"},"object: The ",Object(n.b)("inlineCode",{parentName:"li"},"NSManagedObject")," that is going to have its record uploaded."),Object(n.b)("li",{parentName:"ul"},"record: The ",Object(n.b)("inlineCode",{parentName:"li"},"CKRecord")," that is being configured before being sent to CloudKit.")))),Object(n.b)("h4",{id:"parameters"},"Parameters"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:null},"Name"),Object(n.b)("th",{parentName:"tr",align:null},"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"propertyName"),Object(n.b)("td",{parentName:"tr",align:null},"The name of the property that is being processed")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"object"),Object(n.b)("td",{parentName:"tr",align:null},"The ",Object(n.b)("inlineCode",{parentName:"td"},"NSManagedObject")," that is going to have its record uploaded.")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"record"),Object(n.b)("td",{parentName:"tr",align:null},"The ",Object(n.b)("inlineCode",{parentName:"td"},"CKRecord")," that is being configured before being sent to CloudKit.")))),Object(n.b)("h3",{id:"shouldprocesspropertyindownloadpropertynameobjectrecord"},Object(n.b)("inlineCode",{parentName:"h3"},"shouldProcessPropertyInDownload(propertyName:object:record:)")),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-swift"},"func shouldProcessPropertyInDownload(propertyName: String, object: NSManagedObject, record: CKRecord) -> Bool\n")),Object(n.b)("p",null,"Called by the adapter before copying a property from the CloudKit record that was just downloaded to the Core Data object. The method can apply custom logic to save the property from the record to the object. An object implementing this method ",Object(n.b)("em",{parentName:"p"},"should not")," change the record itself."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Parameters:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"propertyName: The name of the property that is being processed"),Object(n.b)("li",{parentName:"ul"},"object: The ",Object(n.b)("inlineCode",{parentName:"li"},"NSManagedObject")," that corresponds to the downloaded record."),Object(n.b)("li",{parentName:"ul"},"record:  The ",Object(n.b)("inlineCode",{parentName:"li"},"CKRecord")," that was downloaded from CloudKit.")))),Object(n.b)("h4",{id:"parameters-1"},"Parameters"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:null},"Name"),Object(n.b)("th",{parentName:"tr",align:null},"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"propertyName"),Object(n.b)("td",{parentName:"tr",align:null},"The name of the property that is being processed")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"object"),Object(n.b)("td",{parentName:"tr",align:null},"The ",Object(n.b)("inlineCode",{parentName:"td"},"NSManagedObject")," that corresponds to the downloaded record.")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"record"),Object(n.b)("td",{parentName:"tr",align:null},"The ",Object(n.b)("inlineCode",{parentName:"td"},"CKRecord")," that was downloaded from CloudKit.")))))}d.isMDXComponent=!0}}]);