(self.webpackChunkdocs_synckit=self.webpackChunkdocs_synckit||[]).push([[7123],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=u(r),f=l,h=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return r?n.createElement(h,a(a({ref:t},s),{},{components:r})):n.createElement(h,a({ref:t},s))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,a=new Array(o);a[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7386:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var n=r(2122),l=r(9756),o=(r(7294),r(3905)),a=["components"],i={},c="CoreDataMultiFetchedResultsControllerDelegate",u={unversionedId:"api/coredata/CoreDataMultiFetchedResultsControllerDelegate",id:"api/coredata/CoreDataMultiFetchedResultsControllerDelegate",isDocsHomePage:!1,title:"CoreDataMultiFetchedResultsControllerDelegate",description:"` swift",source:"@site/docs/api/coredata/CoreDataMultiFetchedResultsControllerDelegate.md",sourceDirName:"api/coredata",slug:"/api/coredata/CoreDataMultiFetchedResultsControllerDelegate",permalink:"/SyncKit/api/coredata/CoreDataMultiFetchedResultsControllerDelegate",version:"current",frontMatter:{},sidebar:"API",previous:{title:"CoreDataMultiFetchedResultsController",permalink:"/SyncKit/api/coredata/CoreDataMultiFetchedResultsController"},next:{title:"CoreDataStack",permalink:"/SyncKit/api/coredata/CoreDataStack"}},s=[{value:"Inheritance",id:"inheritance",children:[]},{value:"Requirements",id:"requirements",children:[{value:"multiFetchedResultsControllerDidChangeControllers(_:\u200b)",id:"multifetchedresultscontrollerdidchangecontrollers_",children:[]}]}],d={toc:s};function p(e){var t=e.components,r=(0,l.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"coredatamultifetchedresultscontrollerdelegate"},"CoreDataMultiFetchedResultsControllerDelegate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public protocol CoreDataMultiFetchedResultsControllerDelegate: NSFetchedResultsControllerDelegate \n")),(0,o.kt)("h2",{id:"inheritance"},"Inheritance"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"NSFetchedResultsControllerDelegate")),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("h3",{id:"multifetchedresultscontrollerdidchangecontrollers_"},"multiFetchedResultsControllerDidChangeControllers(","_",":\u200b)"),(0,o.kt)("p",null,"Called by the multi-controller when the list of internal controllers changed. E.g. a model adapter was added or removed, which will happen when a new record zone is shared with this user for example if the user accepts a share."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"func multiFetchedResultsControllerDidChangeControllers(_ controller: CoreDataMultiFetchedResultsController)\n")),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"controller: ",(0,o.kt)("inlineCode",{parentName:"li"},"CoreDataMultiFetchedResultsController"))))}p.isMDXComponent=!0}}]);