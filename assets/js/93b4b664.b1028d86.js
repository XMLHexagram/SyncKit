(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{114:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return d}));var r=a(3),n=a(7),c=(a(0),a(132)),b={},l={unversionedId:"RealmAPI/classes/RealmAdapter",id:"RealmAPI/classes/RealmAdapter",isDocsHomePage:!1,title:"RealmAdapter",description:"CLASS",source:"@site/docs/RealmAPI/classes/RealmAdapter.md",slug:"/RealmAPI/classes/RealmAdapter",permalink:"/SyncKit/RealmAPI/classes/RealmAdapter",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/RealmAPI/classes/RealmAdapter.md",version:"current",sidebar:"api",previous:{title:"CloudKitSynchronizerRealm",permalink:"/SyncKit/RealmAPI/classes/CloudKitSynchronizerRealm"},next:{title:"DefaultRealmAdapterProvider",permalink:"/SyncKit/RealmAPI/classes/DefaultRealmAdapterProvider"}},i=[{value:"Properties",id:"properties",children:[{value:"<code>persistenceRealmConfiguration</code>",id:"persistencerealmconfiguration",children:[]},{value:"<code>targetRealmConfiguration</code>",id:"targetrealmconfiguration",children:[]},{value:"<code>zoneID</code>",id:"zoneid",children:[]},{value:"<code>mergePolicy</code>",id:"mergepolicy",children:[]},{value:"<code>delegate</code>",id:"delegate",children:[]},{value:"<code>recordProcessingDelegate</code>",id:"recordprocessingdelegate",children:[]},{value:"<code>forceDataTypeInsteadOfAsset</code>",id:"forcedatatypeinsteadofasset",children:[]},{value:"<code>hasChanges</code>",id:"haschanges",children:[]},{value:"<code>recordZoneID</code>",id:"recordzoneid",children:[]},{value:"<code>serverChangeToken</code>",id:"serverchangetoken",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>init(persistenceRealmConfiguration:targetRealmConfiguration:recordZoneID:)</code>",id:"initpersistencerealmconfigurationtargetrealmconfigurationrecordzoneid",children:[]},{value:"<code>deinit</code>",id:"deinit",children:[]},{value:"<code>defaultPersistenceConfiguration()</code>",id:"defaultpersistenceconfiguration",children:[]},{value:"<code>prepareToImport()</code>",id:"preparetoimport",children:[]},{value:"<code>saveChanges(in:)</code>",id:"savechangesin",children:[]},{value:"<code>deleteRecords(with:)</code>",id:"deleterecordswith",children:[]},{value:"<code>persistImportedChanges(completion:)</code>",id:"persistimportedchangescompletion",children:[]},{value:"<code>recordsToUpload(limit:)</code>",id:"recordstouploadlimit",children:[]},{value:"<code>didUpload(savedRecords:)</code>",id:"diduploadsavedrecords",children:[]},{value:"<code>recordIDsMarkedForDeletion(limit:)</code>",id:"recordidsmarkedfordeletionlimit",children:[]},{value:"<code>didDelete(recordIDs:)</code>",id:"diddeleterecordids",children:[]},{value:"<code>hasRecordID(_:)</code>",id:"hasrecordid_",children:[]},{value:"<code>didFinishImport(with:)</code>",id:"didfinishimportwith",children:[]},{value:"<code>record(for:)</code>",id:"recordfor",children:[]},{value:"<code>share(for:)</code>",id:"sharefor",children:[]},{value:"<code>save(share:for:)</code>",id:"savesharefor",children:[]},{value:"<code>deleteShare(for:)</code>",id:"deletesharefor",children:[]},{value:"<code>deleteChangeTracking()</code>",id:"deletechangetracking",children:[]},{value:"<code>saveToken(_:)</code>",id:"savetoken_",children:[]},{value:"<code>recordsToUpdateParentRelationshipsForRoot(_:)</code>",id:"recordstoupdateparentrelationshipsforroot_",children:[]}]}],o={toc:i};function d(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"CLASS")),Object(c.b)("h1",{id:"realmadapter"},Object(c.b)("inlineCode",{parentName:"h1"},"RealmAdapter")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public class RealmAdapter: NSObject, ModelAdapter\n")),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("h3",{id:"persistencerealmconfiguration"},Object(c.b)("inlineCode",{parentName:"h3"},"persistenceRealmConfiguration")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let persistenceRealmConfiguration: RLMRealmConfiguration\n")),Object(c.b)("h3",{id:"targetrealmconfiguration"},Object(c.b)("inlineCode",{parentName:"h3"},"targetRealmConfiguration")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let targetRealmConfiguration: RLMRealmConfiguration\n")),Object(c.b)("h3",{id:"zoneid"},Object(c.b)("inlineCode",{parentName:"h3"},"zoneID")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public let zoneID: CKRecordZone.ID\n")),Object(c.b)("h3",{id:"mergepolicy"},Object(c.b)("inlineCode",{parentName:"h3"},"mergePolicy")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public var mergePolicy: MergePolicy = .server\n")),Object(c.b)("h3",{id:"delegate"},Object(c.b)("inlineCode",{parentName:"h3"},"delegate")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public var delegate: RealmAdapterDelegate?\n")),Object(c.b)("h3",{id:"recordprocessingdelegate"},Object(c.b)("inlineCode",{parentName:"h3"},"recordProcessingDelegate")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public weak var recordProcessingDelegate: RealmAdapterRecordProcessing?\n")),Object(c.b)("h3",{id:"forcedatatypeinsteadofasset"},Object(c.b)("inlineCode",{parentName:"h3"},"forceDataTypeInsteadOfAsset")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public var forceDataTypeInsteadOfAsset: Bool = false\n")),Object(c.b)("h3",{id:"haschanges"},Object(c.b)("inlineCode",{parentName:"h3"},"hasChanges")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public private(set) var hasChanges = false\n")),Object(c.b)("h3",{id:"recordzoneid"},Object(c.b)("inlineCode",{parentName:"h3"},"recordZoneID")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public var recordZoneID: CKRecordZone.ID\n")),Object(c.b)("h3",{id:"serverchangetoken"},Object(c.b)("inlineCode",{parentName:"h3"},"serverChangeToken")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public var serverChangeToken: CKServerChangeToken?\n")),Object(c.b)("h2",{id:"methods"},"Methods"),Object(c.b)("h3",{id:"initpersistencerealmconfigurationtargetrealmconfigurationrecordzoneid"},Object(c.b)("inlineCode",{parentName:"h3"},"init(persistenceRealmConfiguration:targetRealmConfiguration:recordZoneID:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc public init(persistenceRealmConfiguration: RLMRealmConfiguration, targetRealmConfiguration: RLMRealmConfiguration, recordZoneID: CKRecordZone.ID)\n")),Object(c.b)("h3",{id:"deinit"},Object(c.b)("inlineCode",{parentName:"h3"},"deinit")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"deinit\n")),Object(c.b)("h3",{id:"defaultpersistenceconfiguration"},Object(c.b)("inlineCode",{parentName:"h3"},"defaultPersistenceConfiguration()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"@objc static public func defaultPersistenceConfiguration() -> RLMRealmConfiguration\n")),Object(c.b)("h3",{id:"preparetoimport"},Object(c.b)("inlineCode",{parentName:"h3"},"prepareToImport()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func prepareToImport()\n")),Object(c.b)("h3",{id:"savechangesin"},Object(c.b)("inlineCode",{parentName:"h3"},"saveChanges(in:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func saveChanges(in records: [CKRecord])\n")),Object(c.b)("h4",{id:"parameters"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"records"),Object(c.b)("td",{parentName:"tr",align:null},"Array of ",Object(c.b)("inlineCode",{parentName:"td"},"CKRecord")," that were obtained from CloudKit.")))),Object(c.b)("h3",{id:"deleterecordswith"},Object(c.b)("inlineCode",{parentName:"h3"},"deleteRecords(with:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func deleteRecords(with recordIDs: [CKRecord.ID])\n")),Object(c.b)("h4",{id:"parameters-1"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"recordIDs"),Object(c.b)("td",{parentName:"tr",align:null},"Array of identifiers of records that were deleted on CloudKit.")))),Object(c.b)("h3",{id:"persistimportedchangescompletion"},Object(c.b)("inlineCode",{parentName:"h3"},"persistImportedChanges(completion:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func persistImportedChanges(completion: @escaping ((Error?) -> Void))\n")),Object(c.b)("h4",{id:"parameters-2"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"completion"),Object(c.b)("td",{parentName:"tr",align:null},"Block to be called after changes have been persisted.")))),Object(c.b)("h3",{id:"recordstouploadlimit"},Object(c.b)("inlineCode",{parentName:"h3"},"recordsToUpload(limit:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func recordsToUpload(limit: Int) -> [CKRecord]\n")),Object(c.b)("h4",{id:"parameters-3"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"limit"),Object(c.b)("td",{parentName:"tr",align:null},"Maximum number of records that should be provided.")))),Object(c.b)("h3",{id:"diduploadsavedrecords"},Object(c.b)("inlineCode",{parentName:"h3"},"didUpload(savedRecords:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func didUpload(savedRecords: [CKRecord])\n")),Object(c.b)("h4",{id:"parameters-4"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"savedRecords"),Object(c.b)("td",{parentName:"tr",align:null},"Records that were saved.")))),Object(c.b)("h3",{id:"recordidsmarkedfordeletionlimit"},Object(c.b)("inlineCode",{parentName:"h3"},"recordIDsMarkedForDeletion(limit:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func recordIDsMarkedForDeletion(limit: Int) -> [CKRecord.ID]\n")),Object(c.b)("h4",{id:"parameters-5"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"limit"),Object(c.b)("td",{parentName:"tr",align:null},"Maximum number of records that should be provided.")))),Object(c.b)("h3",{id:"diddeleterecordids"},Object(c.b)("inlineCode",{parentName:"h3"},"didDelete(recordIDs:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func didDelete(recordIDs deletedRecordIDs: [CKRecord.ID])\n")),Object(c.b)("h4",{id:"parameters-6"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"recordIDs"),Object(c.b)("td",{parentName:"tr",align:null},"Record IDs that were deleted on CloudKit.")))),Object(c.b)("h3",{id:"hasrecordid_"},Object(c.b)("inlineCode",{parentName:"h3"},"hasRecordID(_:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func hasRecordID(_ recordID: CKRecord.ID) -> Bool\n")),Object(c.b)("h4",{id:"parameters-7"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"recordID"),Object(c.b)("td",{parentName:"tr",align:null},"Record identifier.")))),Object(c.b)("h3",{id:"didfinishimportwith"},Object(c.b)("inlineCode",{parentName:"h3"},"didFinishImport(with:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func didFinishImport(with error: Error?)\n")),Object(c.b)("h4",{id:"parameters-8"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"error"),Object(c.b)("td",{parentName:"tr",align:null},"Optional error, if any error happened.")))),Object(c.b)("h3",{id:"recordfor"},Object(c.b)("inlineCode",{parentName:"h3"},"record(for:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func record(for object: AnyObject) -> CKRecord?\n")),Object(c.b)("h4",{id:"parameters-9"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"object"),Object(c.b)("td",{parentName:"tr",align:null},"Model object.")))),Object(c.b)("h3",{id:"sharefor"},Object(c.b)("inlineCode",{parentName:"h3"},"share(for:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func share(for object: AnyObject) -> CKShare?\n")),Object(c.b)("h4",{id:"parameters-10"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"object"),Object(c.b)("td",{parentName:"tr",align:null},"Model object.")))),Object(c.b)("h3",{id:"savesharefor"},Object(c.b)("inlineCode",{parentName:"h3"},"save(share:for:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func save(share: CKShare, for object: AnyObject)\n")),Object(c.b)("h4",{id:"parameters-11"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"share"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"CKShare")," object to save.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"object"),Object(c.b)("td",{parentName:"tr",align:null},"Model object.")))),Object(c.b)("h3",{id:"deletesharefor"},Object(c.b)("inlineCode",{parentName:"h3"},"deleteShare(for:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func deleteShare(for object: AnyObject)\n")),Object(c.b)("h4",{id:"parameters-12"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"object"),Object(c.b)("td",{parentName:"tr",align:null},"Model object.")))),Object(c.b)("h3",{id:"deletechangetracking"},Object(c.b)("inlineCode",{parentName:"h3"},"deleteChangeTracking()")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func deleteChangeTracking()\n")),Object(c.b)("h3",{id:"savetoken_"},Object(c.b)("inlineCode",{parentName:"h3"},"saveToken(_:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func saveToken(_ token: CKServerChangeToken?)\n")),Object(c.b)("h4",{id:"parameters-13"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"token"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"CKServerChangeToken"))))),Object(c.b)("h3",{id:"recordstoupdateparentrelationshipsforroot_"},Object(c.b)("inlineCode",{parentName:"h3"},"recordsToUpdateParentRelationshipsForRoot(_:)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-swift"},"public func recordsToUpdateParentRelationshipsForRoot(_ object: AnyObject) -> [CKRecord]\n")),Object(c.b)("h4",{id:"parameters-14"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Name"),Object(c.b)("th",{parentName:"tr",align:null},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},"object"),Object(c.b)("td",{parentName:"tr",align:null},"Model object.")))))}d.isMDXComponent=!0},132:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var r=a(0),n=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=n.a.createContext({}),d=function(e){var t=n.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return n.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,b=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,u=p["".concat(b,".").concat(m)]||p[m]||s[m]||c;return a?n.a.createElement(u,l(l({ref:t},o),{},{components:a})):n.a.createElement(u,l({ref:t},o))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,b=new Array(c);b[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,b[1]=l;for(var o=2;o<c;o++)b[o]=a[o];return n.a.createElement.apply(null,b)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);