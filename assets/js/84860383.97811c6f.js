(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{108:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),i=(n(0),n(130)),o={},c={unversionedId:"RealmSwiftAPI/classes/CloudKitSynchronizerRealmSwift",id:"RealmSwiftAPI/classes/CloudKitSynchronizerRealmSwift",isDocsHomePage:!1,title:"CloudKitSynchronizerRealmSwift",description:"CloudKitSynchronizer",source:"@site/docs/RealmSwiftAPI/classes/CloudKitSynchronizerRealmSwift.md",slug:"/RealmSwiftAPI/classes/CloudKitSynchronizerRealmSwift",permalink:"/SyncKit/RealmSwiftAPI/classes/CloudKitSynchronizerRealmSwift",version:"current",sidebar:"api",previous:{title:"MultiRealmCollectionChange",permalink:"/SyncKit/RealmAPI/enums/MultiRealmCollectionChange"},next:{title:"RealmSwiftAdapter",permalink:"/SyncKit/RealmSwiftAPI/classes/RealmSwiftAdapter"}},l=[{value:"<code>privateSynchronizer(containerName:configuration:suiteName:recordZoneID:)</code>",id:"privatesynchronizercontainernameconfigurationsuitenamerecordzoneid",children:[]},{value:"<code>sharedSynchronizer(containerName:configuration:suiteName:)</code>",id:"sharedsynchronizercontainernameconfigurationsuitename",children:[]},{value:"<code>realms</code>",id:"realms",children:[]},{value:"<code>multiRealmResultsController(predicate:)</code>",id:"multirealmresultscontrollerpredicate",children:[]}],u={toc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"cloudkitsynchronizer"},Object(i.b)("inlineCode",{parentName:"h1"},"CloudKitSynchronizer")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-swift"},"@objc public extension CloudKitSynchronizer\n")),Object(i.b)("h3",{id:"privatesynchronizercontainernameconfigurationsuitenamerecordzoneid"},Object(i.b)("inlineCode",{parentName:"h3"},"privateSynchronizer(containerName:configuration:suiteName:recordZoneID:)")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-swift"},"public class func privateSynchronizer(containerName: String, configuration: Realm.Configuration, suiteName: String? = nil, recordZoneID: CKRecordZone.ID? = nil) -> CloudKitSynchronizer\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Creates a new ",Object(i.b)("inlineCode",{parentName:"li"},"QSCloudKitSynchronizer")," prepared to work with a Realm model and the SyncKit default record zone in the private database.")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Parameters:"),Object(i.b)("li",{parentName:"ul"},"containerName: Identifier of the iCloud container to be used. The application must have the right entitlements to be able to access this container."),Object(i.b)("li",{parentName:"ul"},"configuration: Configuration of the Realm that is to be tracked and synchronized."),Object(i.b)("li",{parentName:"ul"},"suiteName: Identifier of shared App Group for the app. This will store the tracking database in the shared container.")),Object(i.b)("p",null,"-Returns: A new CloudKit synchronizer for the given realm."),Object(i.b)("h3",{id:"sharedsynchronizercontainernameconfigurationsuitename"},Object(i.b)("inlineCode",{parentName:"h3"},"sharedSynchronizer(containerName:configuration:suiteName:)")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-swift"},"public class func sharedSynchronizer(containerName: String, configuration: Realm.Configuration, suiteName: String? = nil) -> CloudKitSynchronizer\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Creates a new ",Object(i.b)("inlineCode",{parentName:"li"},"QSCloudKitSynchronizer")," prepared to work with a Realm model and the shared database.")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Parameters:"),Object(i.b)("li",{parentName:"ul"},"containerName: Identifier of the iCloud container to be used. The application must have the right entitlements to be able to access this container."),Object(i.b)("li",{parentName:"ul"},"configuration: Configuration of the Realm that is to be tracked and synchronized."),Object(i.b)("li",{parentName:"ul"},"suiteName: Identifier of shared App Group for the app. This will store the tracking database in the shared container.")),Object(i.b)("p",null,"-Returns: A new CloudKit synchronizer for the given realm."),Object(i.b)("h3",{id:"realms"},Object(i.b)("inlineCode",{parentName:"h3"},"realms")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-swift"},"public var realms: [Realm]\n")),Object(i.b)("h3",{id:"multirealmresultscontrollerpredicate"},Object(i.b)("inlineCode",{parentName:"h3"},"multiRealmResultsController(predicate:)")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-swift"},"public func multiRealmResultsController<T: Object>(predicate: NSPredicate? = nil) -> MultiRealmResultsController<T>?\n")))}s.isMDXComponent=!0},130:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),s=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=s(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),p=r,b=m["".concat(o,".").concat(p)]||m[p]||d[p]||i;return n?a.a.createElement(b,c(c({ref:t},u),{},{components:n})):a.a.createElement(b,c({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);