(self.webpackChunkdocs_synckit=self.webpackChunkdocs_synckit||[]).push([[836],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=u(t),d=o,m=f["".concat(l,".").concat(d)]||f[d]||s[d]||a;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5392:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=t(2122),o=t(9756),a=(t(7294),t(3905)),i=["components"],c={id:"faq",title:"FAQ"},l="FAQ",u={unversionedId:"faq",id:"faq",isDocsHomePage:!1,title:"FAQ",description:"- How do I get the library to synchronize automatically when my model gets saved?",source:"@site/docs/faq.md",sourceDirName:".",slug:"/faq",permalink:"/faq",version:"current",frontMatter:{id:"faq",title:"FAQ"},sidebar:"docs",previous:{title:"Architecture",permalink:"/architecture"}},p=[],s={toc:p};function f(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"faq"},"FAQ"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"How do I get the library to synchronize automatically when my model gets saved?")),(0,a.kt)("p",null,"You could call ",(0,a.kt)("inlineCode",{parentName:"p"},"synchronizer.synchronize()")," right after you save your model. Alternatively, there is a ",(0,a.kt)("inlineCode",{parentName:"p"},"ModelAdapterHasChangesNotification")," notification being posted when model changes are detected, so you could listen for that and trigger synchronization in response."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"How do I detect when changes happen on another device?")),(0,a.kt)("p",null,"SyncKit can create a ",(0,a.kt)("inlineCode",{parentName:"p"},"CKSubscription")," for a given record zone so your device will receive a push notification whenever there are new changes in that record zone."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"\nif let zoneID = synchronizer.modelAdapters.first?.recordZoneID {\n    synchronizer.subscribeForChanges(in: zoneID) { error in\n        ...\n    }\n}\n")),(0,a.kt)("p",null,"Your app will also need to implement this and call ",(0,a.kt)("inlineCode",{parentName:"p"},"synchronize")," in response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"optional func application(_ application: UIApplication, didReceiveRemoteNotification userInfo: [AnyHashable : Any], fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void)\n")),(0,a.kt)("p",null,"Note that subscriptions are only possible in the private database."))}f.isMDXComponent=!0}}]);