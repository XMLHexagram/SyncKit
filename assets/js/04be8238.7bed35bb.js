(self.webpackChunkdocs_synckit=self.webpackChunkdocs_synckit||[]).push([[1120],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return y}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(r),y=o,m=p["".concat(u,".").concat(y)]||p[y]||f[y]||a;return r?n.createElement(m,l(l({ref:t},s),{},{components:r})):n.createElement(m,l({ref:t},s))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3409:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return p}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),l=["components"],i={},u="KeyValueStore",c={unversionedId:"api/core/KeyValueStore",id:"api/core/KeyValueStore",isDocsHomePage:!1,title:"KeyValueStore",description:"Interface for persisting and loading values.",source:"@site/docs/api/core/KeyValueStore.md",sourceDirName:"api/core",slug:"/api/core/KeyValueStore",permalink:"/SyncKit/api/core/KeyValueStore",version:"current",frontMatter:{},sidebar:"API",previous:{title:"CloudKitSynchronizer.SynchronizeMode",permalink:"/SyncKit/api/core/CloudKitSynchronizer_SynchronizeMode"},next:{title:"MergePolicy",permalink:"/SyncKit/api/core/MergePolicy"}},s=[{value:"Requirements",id:"requirements",children:[{value:"object(forKey:\u200b)",id:"objectforkey",children:[]},{value:"bool(forKey:\u200b)",id:"boolforkey",children:[]},{value:"set(value:\u200bforKey:\u200b)",id:"setvalueforkey",children:[]},{value:"set(boolValue:\u200bforKey:\u200b)",id:"setboolvalueforkey",children:[]},{value:"removeObject(forKey:\u200b)",id:"removeobjectforkey",children:[]}]}],f={toc:s};function p(e){var t=e.components,r=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"keyvaluestore"},"KeyValueStore"),(0,a.kt)("p",null,"Interface for persisting and loading values."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public protocol KeyValueStore \n")),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("h3",{id:"objectforkey"},"object(forKey:\u200b)"),(0,a.kt)("p",null,"Returns the object associated with the specified key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func object(forKey defaultName: String) -> Any?\n")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"defaultName: A key in the current store.")),(0,a.kt)("h3",{id:"boolforkey"},"bool(forKey:\u200b)"),(0,a.kt)("p",null,"Returns the Boolean value associated with the specified key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func bool(forKey defaultName: String) -> Bool\n")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"defaultName: A key in the current store.")),(0,a.kt)("h3",{id:"setvalueforkey"},"set(value:\u200bforKey:\u200b)"),(0,a.kt)("p",null,"Sets the value of the specified key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func set(value: Any?, forKey defaultName: String)\n")),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"value: The object to store in the store."),(0,a.kt)("li",{parentName:"ul"},"defaultName: The key with which to associate the value.")),(0,a.kt)("h3",{id:"setboolvalueforkey"},"set(boolValue:\u200bforKey:\u200b)"),(0,a.kt)("p",null,"Sets the value of the specified key to the specified Boolean value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func set(boolValue: Bool, forKey defaultName: String)\n")),(0,a.kt)("h4",{id:"parameters-3"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"boolValue: The Boolean value to store."),(0,a.kt)("li",{parentName:"ul"},"defaultName: The key with which to associate the value.")),(0,a.kt)("h3",{id:"removeobjectforkey"},"removeObject(forKey:\u200b)"),(0,a.kt)("p",null,"Removes the value of the specified default key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"func removeObject(forKey defaultName: String)\n")),(0,a.kt)("h4",{id:"parameters-4"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"defaultName: The key whose value you want to remove.")))}p.isMDXComponent=!0}}]);