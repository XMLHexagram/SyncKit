(self.webpackChunkdocs_synckit=self.webpackChunkdocs_synckit||[]).push([[3202],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return f}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(r),f=n,g=d["".concat(l,".").concat(f)]||d[f]||s[f]||o;return r?a.createElement(g,i(i({ref:t},u),{},{components:r})):a.createElement(g,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4149:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var a=r(2122),n=r(9756),o=(r(7294),r(3905)),i=["components"],c={},l="CoreDataAdapterConflictResolutionDelegate",p={unversionedId:"api/coredata/CoreDataAdapterConflictResolutionDelegate",id:"api/coredata/CoreDataAdapterConflictResolutionDelegate",isDocsHomePage:!1,title:"CoreDataAdapterConflictResolutionDelegate",description:"An implementation of this protocol can be provided for custom conflict resolution.",source:"@site/docs/api/coredata/CoreDataAdapterConflictResolutionDelegate.md",sourceDirName:"api/coredata",slug:"/api/coredata/CoreDataAdapterConflictResolutionDelegate",permalink:"/api/coredata/CoreDataAdapterConflictResolutionDelegate",version:"current",frontMatter:{},sidebar:"API",previous:{title:"CoreDataAdapter",permalink:"/api/coredata/CoreDataAdapter"},next:{title:"CoreDataAdapterDelegate",permalink:"/api/coredata/CoreDataAdapterDelegate"}},u=[{value:"Requirements",id:"requirements",children:[{value:"coreDataAdapter(_:\u200bgotChanges:\u200bfor:\u200b)",id:"coredataadapter_gotchangesfor",children:[]}]}],s={toc:u};function d(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"coredataadapterconflictresolutiondelegate"},"CoreDataAdapterConflictResolutionDelegate"),(0,o.kt)("p",null,"An implementation of this protocol can be provided for custom conflict resolution."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public protocol CoreDataAdapterConflictResolutionDelegate \n")),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("h3",{id:"coredataadapter_gotchangesfor"},"coreDataAdapter(","_",":\u200bgotChanges:\u200bfor:\u200b)"),(0,o.kt)("p",null,"Asks the delegate to resolve conflicts for a managed object. The delegate is expected to examine the change dictionary and optionally apply any of those changes to the managed object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"func coreDataAdapter(_ adapter: CoreDataAdapter, gotChanges changeDictionary: [String: Any], for object: NSManagedObject)\n")),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"adapter: The ",(0,o.kt)("inlineCode",{parentName:"li"},"CoreDataAdapter")," that is providing the changes."),(0,o.kt)("li",{parentName:"ul"},"changeDictionary: Dictionary containing keys and values with changes for the managed object. Values could be ","[","NSNull null","]"," to represent a nil value."),(0,o.kt)("li",{parentName:"ul"},"object: The ",(0,o.kt)("inlineCode",{parentName:"li"},"NSManagedObject")," that has changed on iCloud.")))}d.isMDXComponent=!0}}]);