(self.webpackChunkdocs_synckit=self.webpackChunkdocs_synckit||[]).push([[9631],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(r),m=a,f=s["".concat(p,".").concat(m)]||s[m]||u[m]||i;return r?n.createElement(f,o(o({ref:t},d),{},{components:r})):n.createElement(f,o({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},8828:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return s}});var n=r(2122),a=r(9756),i=(r(7294),r(3905)),o=["components"],l={},p="DefaultRealmAdapterProvider",c={unversionedId:"api/realm/DefaultRealmAdapterProvider",id:"api/realm/DefaultRealmAdapterProvider",isDocsHomePage:!1,title:"DefaultRealmAdapterProvider",description:"` swift",source:"@site/docs/api/realm/DefaultRealmAdapterProvider.md",sourceDirName:"api/realm",slug:"/api/realm/DefaultRealmAdapterProvider",permalink:"/api/realm/DefaultRealmAdapterProvider",version:"current",frontMatter:{},sidebar:"API",previous:{title:"DefaultCoreDataStackProvider",permalink:"/api/coredata/DefaultCoreDataStackProvider"},next:{title:"DefaultRealmProvider",permalink:"/api/realm/DefaultRealmProvider"}},d=[{value:"Inheritance",id:"inheritance",children:[]},{value:"Initializers",id:"initializers",children:[{value:"<code>init(targetConfiguration:zoneID:appGroup:)</code>",id:"inittargetconfigurationzoneidappgroup",children:[]}]},{value:"Properties",id:"properties",children:[{value:"<code>zoneID</code>",id:"zoneid",children:[]},{value:"<code>persistenceConfiguration</code>",id:"persistenceconfiguration",children:[]},{value:"<code>targetConfiguration</code>",id:"targetconfiguration",children:[]},{value:"<code>appGroup</code>",id:"appgroup",children:[]},{value:"<code>adapter</code>",id:"adapter",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>cloudKitSynchronizer(_:modelAdapterForRecordZoneID:)</code>",id:"cloudkitsynchronizer_modeladapterforrecordzoneid",children:[]},{value:"<code>cloudKitSynchronizer(_:zoneWasDeletedWithZoneID:)</code>",id:"cloudkitsynchronizer_zonewasdeletedwithzoneid",children:[]},{value:"<code>realmPath(appGroup:)</code>",id:"realmpathappgroup",children:[]}]}],u={toc:d};function s(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"defaultrealmadapterprovider"},"DefaultRealmAdapterProvider"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public class DefaultRealmAdapterProvider: NSObject, AdapterProvider \n")),(0,i.kt)("h2",{id:"inheritance"},"Inheritance"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../core/AdapterProvider"},(0,i.kt)("inlineCode",{parentName:"a"},"AdapterProvider")),", ",(0,i.kt)("inlineCode",{parentName:"p"},"NSObject")),(0,i.kt)("h2",{id:"initializers"},"Initializers"),(0,i.kt)("h3",{id:"inittargetconfigurationzoneidappgroup"},(0,i.kt)("inlineCode",{parentName:"h3"},"init(targetConfiguration:zoneID:appGroup:)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public init(targetConfiguration: RLMRealmConfiguration, zoneID: CKRecordZone.ID, appGroup: String? = nil) \n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"zoneid"},(0,i.kt)("inlineCode",{parentName:"h3"},"zoneID")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public let zoneID: CKRecordZone.ID\n")),(0,i.kt)("h3",{id:"persistenceconfiguration"},(0,i.kt)("inlineCode",{parentName:"h3"},"persistenceConfiguration")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public let persistenceConfiguration: RLMRealmConfiguration\n")),(0,i.kt)("h3",{id:"targetconfiguration"},(0,i.kt)("inlineCode",{parentName:"h3"},"targetConfiguration")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public let targetConfiguration: RLMRealmConfiguration\n")),(0,i.kt)("h3",{id:"appgroup"},(0,i.kt)("inlineCode",{parentName:"h3"},"appGroup")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public let appGroup: String?\n")),(0,i.kt)("h3",{id:"adapter"},(0,i.kt)("inlineCode",{parentName:"h3"},"adapter")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"@objc public private(set) var adapter: RealmAdapter!\n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"cloudkitsynchronizer_modeladapterforrecordzoneid"},(0,i.kt)("inlineCode",{parentName:"h3"},"cloudKitSynchronizer(_:modelAdapterForRecordZoneID:)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public func cloudKitSynchronizer(_ synchronizer: CloudKitSynchronizer, modelAdapterForRecordZoneID recordZoneID: CKRecordZone.ID) -> ModelAdapter? \n")),(0,i.kt)("h3",{id:"cloudkitsynchronizer_zonewasdeletedwithzoneid"},(0,i.kt)("inlineCode",{parentName:"h3"},"cloudKitSynchronizer(_:zoneWasDeletedWithZoneID:)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public func cloudKitSynchronizer(_ synchronizer: CloudKitSynchronizer, zoneWasDeletedWithZoneID recordZoneID: CKRecordZone.ID) \n")),(0,i.kt)("h3",{id:"realmpathappgroup"},(0,i.kt)("inlineCode",{parentName:"h3"},"realmPath(appGroup:)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public static func realmPath(appGroup: String?) -> String \n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If using app groups, SyncKit offers the option to store its tracking database in the shared container so that it's"),(0,i.kt)("li",{parentName:"ul"},"accessible by SyncKit from any of the apps in the group. This method returns the path used in this case."),(0,i.kt)("li",{parentName:"ul"}),(0,i.kt)("li",{parentName:"ul"},"@param  appGroup   Identifier of an App Group this app belongs to."),(0,i.kt)("li",{parentName:"ul"}),(0,i.kt)("li",{parentName:"ul"},"@return File path, in the shared container, where SyncKit will store its tracking database.")))}s.isMDXComponent=!0}}]);