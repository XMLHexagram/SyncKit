(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{132:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),s=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),b=a,g=p["".concat(i,".").concat(b)]||p[b]||d[b]||o;return n?r.a.createElement(g,c(c({ref:t},u),{},{components:n})):r.a.createElement(g,c({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),o=(n(0),n(132)),i={id:"installation",title:"Installation"},c={unversionedId:"installation",id:"installation",isDocsHomePage:!1,title:"Installation",description:"Adding SyncKit to your project using Cocoapods",source:"@site/docs/installation.md",slug:"/installation",permalink:"/SyncKit/installation",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/installation.md",version:"current",sidebar:"docs",previous:{title:"Introduction",permalink:"/SyncKit/"},next:{title:"Example app",permalink:"/SyncKit/example"}},l=[{value:"Adding SyncKit to your project using Cocoapods",id:"adding-synckit-to-your-project-using-cocoapods",children:[]},{value:"Adding SyncKit to your project using Carthage",id:"adding-synckit-to-your-project-using-carthage",children:[]},{value:"Adding SyncKit using Swift Package Manager",id:"adding-synckit-using-swift-package-manager",children:[]},{value:"Requirements",id:"requirements",children:[]}],u={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"adding-synckit-to-your-project-using-cocoapods"},"Adding SyncKit to your project using Cocoapods"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"http://cocoapods.org"},"CocoaPods")," is a dependency manager for Swift and Objective-C Cocoa projects. Install Cocoapods if you don't have it already:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"$ gem install cocoapods\n")),Object(o.b)("p",null,"And add SyncKit to your ",Object(o.b)("inlineCode",{parentName:"p"},"Podfile"),". Use the corresponding subspec based on what technology you use for you model, for example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ruby"},"source 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '10.0'\n\nuse_frameworks!\n\ntarget 'CoreDataTargetName' do\npod 'SyncKit/CoreData', '~> 1.0.0'\nend\n\ntarget 'RealmTargetName' do\npod 'SyncKit/Realm', '~> 1.0.0'\nend\n\ntarget 'RealmSwiftTargetName' do\npod 'SyncKit/RealmSwift', '~> 1.0.0'\nend\n\n")),Object(o.b)("p",null,"Then install using:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"$ pod install\n")),Object(o.b)("h2",{id:"adding-synckit-to-your-project-using-carthage"},"Adding SyncKit to your project using Carthage"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/Carthage/Carthage"},"Carthage")," is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. Install Carthage if you don't have it already:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"$ brew install carthage\n")),Object(o.b)("p",null,"Add SyncKit to your ",Object(o.b)("inlineCode",{parentName:"p"},"Cartfile"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'github "mentrena/SyncKit" ~> 1.0.0\n')),Object(o.b)("p",null,"Run ",Object(o.b)("inlineCode",{parentName:"p"},"carthage update")," to create the framework, then drag the right version of the framework into your project, depending on what model your app uses."),Object(o.b)("h2",{id:"adding-synckit-using-swift-package-manager"},"Adding SyncKit using Swift Package Manager"),Object(o.b)("p",null,"You can add SyncKit as a package dependency:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"https://github.com/mentrena/SyncKit\n")),Object(o.b)("h2",{id:"requirements"},"Requirements"),Object(o.b)("p",null,"Your application must have the right entitlements to use iCloud and CloudKit, and it must link against the CloudKit framework.\nYour app is also responsible for handling the cases where a user has not signed into an iCloud account or the current iCloud account changes.\nSyncKit 0.6.0 requires iOS 10+ or MacOS 10.12+.\nPrevious versions support iOS 8.0+ and MacOS 10.10+."))}s.isMDXComponent=!0}}]);