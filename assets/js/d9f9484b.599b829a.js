(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{123:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return d}));var n=r(3),a=r(7),o=(r(0),r(132)),i={},c={unversionedId:"RealmSwiftAPI/classes/DefaultRealmSwiftAdapterProvider",id:"RealmSwiftAPI/classes/DefaultRealmSwiftAdapterProvider",isDocsHomePage:!1,title:"DefaultRealmSwiftAdapterProvider",description:"CLASS",source:"@site/docs/RealmSwiftAPI/classes/DefaultRealmSwiftAdapterProvider.md",slug:"/RealmSwiftAPI/classes/DefaultRealmSwiftAdapterProvider",permalink:"/SyncKit/RealmSwiftAPI/classes/DefaultRealmSwiftAdapterProvider",version:"current",sidebar:"api",previous:{title:"RealmSwiftAdapter",permalink:"/SyncKit/RealmSwiftAPI/classes/RealmSwiftAdapter"},next:{title:"DefaultRealmProvider",permalink:"/SyncKit/RealmSwiftAPI/classes/DefaultRealmProvider"}},l=[{value:"Properties",id:"properties",children:[{value:"<code>adapter</code>",id:"adapter",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>init(targetConfiguration:zoneID:appGroup:)</code>",id:"inittargetconfigurationzoneidappgroup",children:[]},{value:"<code>cloudKitSynchronizer(_:modelAdapterForRecordZoneID:)</code>",id:"cloudkitsynchronizer_modeladapterforrecordzoneid",children:[]},{value:"<code>cloudKitSynchronizer(_:zoneWasDeletedWithZoneID:)</code>",id:"cloudkitsynchronizer_zonewasdeletedwithzoneid",children:[]},{value:"<code>realmPath(appGroup:)</code>",id:"realmpathappgroup",children:[]}]}],p={toc:l};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"CLASS")),Object(o.b)("h1",{id:"defaultrealmswiftadapterprovider"},Object(o.b)("inlineCode",{parentName:"h1"},"DefaultRealmSwiftAdapterProvider")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},"public class DefaultRealmSwiftAdapterProvider: NSObject, AdapterProvider\n")),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)("h3",{id:"adapter"},Object(o.b)("inlineCode",{parentName:"h3"},"adapter")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},"public private(set) var adapter: RealmSwiftAdapter!\n")),Object(o.b)("h2",{id:"methods"},"Methods"),Object(o.b)("h3",{id:"inittargetconfigurationzoneidappgroup"},Object(o.b)("inlineCode",{parentName:"h3"},"init(targetConfiguration:zoneID:appGroup:)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},"public init(targetConfiguration: Realm.Configuration, zoneID: CKRecordZone.ID, appGroup: String? = nil)\n")),Object(o.b)("h3",{id:"cloudkitsynchronizer_modeladapterforrecordzoneid"},Object(o.b)("inlineCode",{parentName:"h3"},"cloudKitSynchronizer(_:modelAdapterForRecordZoneID:)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},"public func cloudKitSynchronizer(_ synchronizer: CloudKitSynchronizer, modelAdapterForRecordZoneID recordZoneID: CKRecordZone.ID) -> ModelAdapter?\n")),Object(o.b)("h4",{id:"parameters"},"Parameters"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Name"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"synchronizer"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"QSCloudKitSynchronizer")," asking for the adapter.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"zoneID"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"CKRecordZoneID")," that the model adapter will be used for.")))),Object(o.b)("h3",{id:"cloudkitsynchronizer_zonewasdeletedwithzoneid"},Object(o.b)("inlineCode",{parentName:"h3"},"cloudKitSynchronizer(_:zoneWasDeletedWithZoneID:)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},"public func cloudKitSynchronizer(_ synchronizer: CloudKitSynchronizer, zoneWasDeletedWithZoneID recordZoneID: CKRecordZone.ID)\n")),Object(o.b)("h4",{id:"parameters-1"},"Parameters"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Name"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"synchronizer"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"QSCloudKitSynchronizer")," that found the deleted record zone.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"zoneID"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"CKRecordZoneID")," of the record zone that was deleted.")))),Object(o.b)("h3",{id:"realmpathappgroup"},Object(o.b)("inlineCode",{parentName:"h3"},"realmPath(appGroup:)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},"public static func realmPath(appGroup: String?) -> String\n")),Object(o.b)("p",null,"  If using app groups, SyncKit offers the option to store its tracking database in the shared container so that it's\naccessible by SyncKit from any of the apps in the group. This method returns the path used in this case."),Object(o.b)("p",null,"  @param  appGroup   Identifier of an App Group this app belongs to."),Object(o.b)("p",null,"  @return File path, in the shared container, where SyncKit will store its tracking database."))}d.isMDXComponent=!0},132:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),d=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},b=function(e){var t=d(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},s=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=d(r),s=n,m=b["".concat(i,".").concat(s)]||b[s]||u[s]||o;return r?a.a.createElement(m,c(c({ref:t},p),{},{components:r})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=s;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}s.displayName="MDXCreateElement"}}]);