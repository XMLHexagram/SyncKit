(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{132:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=o.a.createContext({}),b=function(e){var t=o.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=b(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},s=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=b(r),s=n,m=p["".concat(c,".").concat(s)]||p[s]||u[s]||a;return r?o.a.createElement(m,i(i({ref:t},d),{},{components:r})):o.a.createElement(m,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=s;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var d=2;d<a;d++)c[d]=r[d];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}s.displayName="MDXCreateElement"},91:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return b}));var n=r(3),o=r(7),a=(r(0),r(132)),c={},i={unversionedId:"Core/protocols/AdapterProvider",id:"Core/protocols/AdapterProvider",isDocsHomePage:!1,title:"AdapterProvider",description:"PROTOCOL",source:"@site/docs/Core/protocols/AdapterProvider.md",slug:"/Core/protocols/AdapterProvider",permalink:"/SyncKit/Core/protocols/AdapterProvider",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Core/protocols/AdapterProvider.md",version:"current",sidebar:"api",previous:{title:"UserDefaultsAdapter",permalink:"/SyncKit/Core/classes/UserDefaultsAdapter"},next:{title:"CloudKitDatabaseAdapter",permalink:"/SyncKit/Core/protocols/CloudKitDatabaseAdapter"}},l=[{value:"Methods",id:"methods",children:[{value:"<code>cloudKitSynchronizer(_:modelAdapterForRecordZoneID:)</code>",id:"cloudkitsynchronizer_modeladapterforrecordzoneid",children:[]},{value:"<code>cloudKitSynchronizer(_:zoneWasDeletedWithZoneID:)</code>",id:"cloudkitsynchronizer_zonewasdeletedwithzoneid",children:[]}]}],d={toc:l};function b(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"PROTOCOL")),Object(a.b)("h1",{id:"adapterprovider"},Object(a.b)("inlineCode",{parentName:"h1"},"AdapterProvider")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-swift"},"@objc public protocol AdapterProvider\n")),Object(a.b)("p",null,"An ",Object(a.b)("inlineCode",{parentName:"p"},"AdapterProvider")," gets requested for new model adapters when a ",Object(a.b)("inlineCode",{parentName:"p"},"CloudKitSynchronizer")," encounters a new ",Object(a.b)("inlineCode",{parentName:"p"},"CKRecordZone")," that does not already correspond to an existing model adapter."),Object(a.b)("h2",{id:"methods"},"Methods"),Object(a.b)("h3",{id:"cloudkitsynchronizer_modeladapterforrecordzoneid"},Object(a.b)("inlineCode",{parentName:"h3"},"cloudKitSynchronizer(_:modelAdapterForRecordZoneID:)")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-swift"},"func cloudKitSynchronizer(_ synchronizer: CloudKitSynchronizer, modelAdapterForRecordZoneID zoneID: CKRecordZone.ID) -> ModelAdapter?\n")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"CloudKitSynchronizer")," requests a new model adapter for the given record zone."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Parameters:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"synchronizer: ",Object(a.b)("inlineCode",{parentName:"li"},"QSCloudKitSynchronizer")," asking for the adapter."),Object(a.b)("li",{parentName:"ul"},"zoneID: ",Object(a.b)("inlineCode",{parentName:"li"},"CKRecordZoneID")," that the model adapter will be used for."))),Object(a.b)("li",{parentName:"ul"},"Returns: ",Object(a.b)("inlineCode",{parentName:"li"},"ModelAdapter")," correctly configured to sync changes in the given record zone.")),Object(a.b)("h4",{id:"parameters"},"Parameters"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Name"),Object(a.b)("th",{parentName:"tr",align:null},"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"synchronizer"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"QSCloudKitSynchronizer")," asking for the adapter.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"zoneID"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"CKRecordZoneID")," that the model adapter will be used for.")))),Object(a.b)("h3",{id:"cloudkitsynchronizer_zonewasdeletedwithzoneid"},Object(a.b)("inlineCode",{parentName:"h3"},"cloudKitSynchronizer(_:zoneWasDeletedWithZoneID:)")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-swift"},"func cloudKitSynchronizer(_ synchronizer: CloudKitSynchronizer, zoneWasDeletedWithZoneID zoneID: CKRecordZone.ID)\n")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"CloudKitSynchronizer")," informs the provider that a record zone was deleted so it can clean up any associated data."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Parameters:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"synchronizer: ",Object(a.b)("inlineCode",{parentName:"li"},"QSCloudKitSynchronizer")," that found the deleted record zone."),Object(a.b)("li",{parentName:"ul"},"zoneID: ",Object(a.b)("inlineCode",{parentName:"li"},"CKRecordZoneID")," of the record zone that was deleted.")))),Object(a.b)("h4",{id:"parameters-1"},"Parameters"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Name"),Object(a.b)("th",{parentName:"tr",align:null},"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"synchronizer"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"QSCloudKitSynchronizer")," that found the deleted record zone.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},"zoneID"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("inlineCode",{parentName:"td"},"CKRecordZoneID")," of the record zone that was deleted.")))))}b.isMDXComponent=!0}}]);